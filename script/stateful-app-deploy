#!/bin/bash
set -ex

echo "Deploying statefulapps"

export AWS_ACCESS_KEY_ID=$AC_ID
export AWS_SECRET_ACCESS_KEY=$AC_KEY
export AWS_DEFAULT_REGION=eu-west-2
export AWS_DEFAULT_OUTPUT=json
export ANSIBLE_HOST_KEY_CHECKING=False
mkdir /tmp/aws
mkdir ~/.kube
cp  aws-openebs/config ~/.kube/config
cat aws-openebs/id.csv > /tmp/aws/id.csv
cat aws-openebs/cluster_name.csv >/tmp/aws/cluster_name.csv
cp -r aws-openebs/ssh/. ~/.ssh/


echo "attaching disks"

git clone https://github.com/atulabhi/litmus.git

cd litmus

git checkout v0.7-RC1

#cd k8s/aws/ebs-volumes/

#cluster=$(cat /tmp/aws/cluster_name.csv | cut -d: -f2)
#ansible-playbook create-ebs-volume.yml -vv --extra-vars "cluster_name=nodes.k8s-$cluster.k8s.local"

wget https://raw.githubusercontent.com/atulabhi/litmus/v0.7-RC1/providers/openebs/installers/storageclass/0.7/litmusbook/storageclass_setup.yaml


#kubectl apply -f  storageclass_setup.yaml


kubectl apply -f apps/percona/deployers/deploy_percona_litmus.yaml

litmus_pod=$(kubectl get pod -a -n litmus --no-headers -o custom-columns=:metadata.name)
status_cmd='kubectl logs $litmus_pod -n litmus -c ansibletest'

sleep 120
while [[ $(kubectl get pod $litmus_pod --no-headers -n litmus -o custom-columns=:status.phase) =~ 'Running' ]]
do
   echo "Still Running sir..."
   sleep 1
done
if [[ ! $(eval $status_cmd) =~ 'FAILED!' ]]; then
   TestStatus='Pass'
else
  TestStatus='Fail'
fi
echo $TestStatus

echo "========================================================================="

eval $status_cmd

kubectl get po

kubectl get sc

kubectl get sp
