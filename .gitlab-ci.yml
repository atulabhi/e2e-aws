## TODO: Modularize the gitlab yaml to reuse templates

## Define the stages & order of execution

stages:
  - cluster-setup
  - infra-setup
  - stateful-apps-deploy
  - chaos-test
  - cleanup
  - deploy

## Setup the kubernetes cluster

aws-cluster:
  image: atulabhi/kops:v8
  stage: cluster-setup
  script: 
    - ./script/aws
  artifacts:
    paths:
      - aws/

## Setup OpenEBS control plane

openebs-aws-deploy:
  image: atulabhi/kops:v8
  stage: infra-setup
  dependencies:
    - aws-cluster
  script: 
   - ./script/provider/infra-setup
  artifacts:
    paths:
      - aws-openebs/

## Define a job template for app deployers

.app_deploy_template:
  image: atulabhi/kops:v8
  stage: stateful-apps-deploy
  dependencies:
    - openebs-aws-deploy
  artifacts:
    paths: 
      - aws-openebs/

## Define the app deployer jobs

percona-jiva:
  extends: .app_deploy_template
  script: 
   - ./script/apps/percona/deployer/percona-app-deploy-jiva

mongo-jiva:
  extends: .app_deploy_template
  script: 
   - ./script/apps/mongo/deployer/mongo-app-deploy-jiva

postgres-jiva:
  extends: .app_deploy_template
  script: 
   - ./script/apps/postgres/deployer/postgres-app-deploy-jiva

cassandra-jiva:
  extends: .app_deploy_template
  script: 
   - ./script/apps/cassandra/deployer/cassandra-app-deploy-jiva

jenkins-jiva:
  extends: .app_deploy_template
  script: 
   - ./script/apps/jenkins/deployer/jenkins-app-deploy-jiva

percona-cstor:
  extends: .app_deploy_template
  script: 
   - ./script/apps/percona/deployer/percona-app-deploy-cstor

#mongo-cstor:
#  extends: .app_deploy_template
#  script: 
#   - ./script/apps/mongo/deployer/mongo-app-deploy-cstor

## Define job template for chaos jobs 

.chaos_test_template:
  image: atulabhi/kops:v8
  stage: chaos-test 
  when: always 
  artifacts:
    paths: 
      - aws-openebs/

repl-kill(percona-jiva):
  extends: .chaos_test_template #dependencies: percona-jiva
  script:
   - ./script/apps/percona/chaos/jiva/volume-replica-failure

ctrl-kill(mongo-jiva)):
  extends: .chaos_test_template #dependencies: mongo-jiva
  script:
   - ./script/apps/mongo/chaos/jiva/volume-controller-failure

repl-nw-loss(jenkins-jiva):
  extends: .chaos_test_template #dependencies: jenkins-jiva
  script:
   - ./script/apps/jenkins/chaos/jiva/volume-replica-network-delay

ctrl-nw-loss(postgres-jiva):
  extends: .chaos_test_template #dependencies: postgres-jiva
  script:
   - ./script/apps/postgres/chaos/jiva/volume-controller-network-delay

tgt-kill(percona-cstor):
  extends: .chaos_test_template #dependencies: percona-cstor
  script:
   - ./script/apps/percona/chaos/cstor/volume-target-failure

#tgt-nw-loss(mongo-cstor):
#  extends: .chaos_test_template #dependencies: mongo-cstor
#  script:
#   - ./script/apps/mongo/chaos/cstor/volume-target-network-delay


cleanup-aws:
  when: always
  image: atulabhi/kops:v8
  dependencies:
    - aws-cluster
  stage: cleanup
  script: 
    - chmod 755 ./script/aws-cleanup
    - ./script/aws-cleanup
